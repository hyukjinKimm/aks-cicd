name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to Quay.io
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}
        registry: quay.io

    - name: Build and push Docker image to Quay.io
      run: |
        # Docker 이미지를 quay.io에서 빌드하고 푸시합니다.
        docker buildx build -f ./app/Dockerfile -t quay.io/${{ secrets.QUAY_USERNAME }}/node:v1 ./app --push


  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Set up Azure CLI
      uses: azure/azure-cli-action@v1
      with:
        azure-cli-version: '2.27.0'
  
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
  
    - name: Deploy to AKS
      run: |
        # AKS 클러스터에 연결하여 배포합니다.
        az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}
        
        # Kubernetes 클러스터에 배포 및 서비스 생성
        envsubst < k8s/deployment.yaml | kubectl apply -f -
        kubectl apply -f k8s/service.yaml
  
        # 배포 상태 확인
        kubectl rollout status deployment/${{ secrets.AKS_DEPLOYMENT_NAME }}
