name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Podman
      uses: redhat-actions/setup-podman@v1

    - name: Cache Podman layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
          
    - name: Log in to Docker Hub (Podman)
      run: |
        podman login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} docker.io

    - name: Build and Push Docker image with Podman
      run: |
        podman build --no-cache -f ./app/Dockerfile -t docker.io/${{ secrets.DOCKER_USERNAME }}/node:v1 ./app
        podman push docker.io/${{ secrets.DOCKER_USERNAME }}/node:v1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Set up Azure CLI
      uses: azure/setup-azure-cli@v1
      with:
        azure-cli-version: '2.27.0'

    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to AKS
      run: |
        # AKS 클러스터에 연결하여 배포합니다.
        az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}
        
        # Kubernetes에 배포하고 서비스를 생성합니다.
        export DOCKER_USER=${{ secrets.DOCKER_USER }}
        envsubst < k8s/deployment.yaml | kubectl apply -f -
        kubectl apply -f k8s/service.yaml
